entrypoints SigRel, SigFun;

SigRel. SigRel ::= Pattern "->" "{" [Equation] "}" ;

SigFun. SigFun ::= Pattern "->" "{" BExpr "}" ;

PatternWild.     Pattern ::= "_" ;
PatternName.     Pattern ::= PatternNameQual LIdent ;
PatternTuple.    Pattern ::= "(" [Pattern] ")" ;
separator        Pattern "," ;

PatternNameQualEmpty.  PatternNameQual ::= ;
PatternNameQualFlow.   PatternNameQual ::= "flow" ;

EquationEqual.       Equation ::= Expr "=" Expr ;
EquationInit.        Equation ::= "init"   Expr "=" Expr ;
EquationReinit.      Equation ::= "reinit" Expr "=" Expr ;
EquationLocal.       Equation ::= "local" LIdent [LIdent];
EquationConnect.     Equation ::= "connect" LIdent LIdent [LIdent] ;
EquationConnectFlow. Equation ::= "connect" "flow" LIdent LIdent [LIdent] ;
EquationMonitor.     Equation ::= "monitor" LIdent ;
EquationSigRelApp.   Equation ::= HsExpr "<>" Expr ;
separator            Equation ";" ;
separator            LIdent "" ;

ExprAdd.     Expr1 ::= Expr1 "+" Expr2 ;
ExprSub.     Expr1 ::= Expr1 "-" Expr2 ;
ExprDiv.     Expr2 ::= Expr2 "/" Expr3 ;
ExprMul.     Expr2 ::= Expr2 "*" Expr3 ;
ExprPow.     Expr3 ::= Expr3 "^" Expr4 ;
ExprNeg.     Expr3 ::= "-" Expr4 ;
ExprApp.     Expr4 ::= Expr4 Expr5 ;
ExprVar.     Expr5 ::= LIdent ;
ExprAnti.    Expr5 ::= HsExpr ;
ExprInt.     Expr5 ::= Integer ;
ExprReal.    Expr5 ::= Double ;
ExprTuple.   Expr5 ::= "(" [Expr] ")" ; 
_.           Expr  ::= Expr1 ;
_.           Expr1 ::= Expr2 ;
_.           Expr2 ::= Expr3 ;
_.           Expr3 ::= Expr4 ;
_.           Expr4 ::= Expr5 ;
separator    Expr "," ;

BExprOr.     BExpr1 ::= BExpr1 "||" BExpr2 ;
BExprAnd.    BExpr2 ::= BExpr2 "&&" BExpr3 ;
BExprLt.     BExpr3 ::= Expr "<"  Expr ;
BExprLte.    BExpr3 ::= Expr "<=" Expr ;
BExprGt.     BExpr3 ::= Expr ">"  Expr ;
BExprGte.    BExpr3 ::= Expr ">=" Expr ;
BExprNot.    BExpr3 ::= "not" BExpr4 ;
BExprTrue.   BExpr4 ::= "True" ;
BExprFalse.  BExpr4 ::= "False" ;
_.           BExpr4 ::= "(" BExpr ")" ;
_.           BExpr   ::= BExpr1 ;
_.           BExpr1  ::= BExpr2 ;
_.           BExpr2  ::= BExpr3 ;
_.           BExpr3  ::= BExpr4 ;

comment "--" ;
comment "{-" "-}" ;

token LIdent ((lower | '_') (letter | digit | '_')*) ;
token HsExpr ('$' (char - '$')* '$') ;

-- layout toplevel ;
layout "->" ;
-- layout stop "in"