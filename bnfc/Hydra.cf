entrypoints SigRel, SigFun;

SigRel. SigRel ::= Pattern "->" "{" [Equation] "}" ;

SigFun. SigFun ::= Pattern "->" "{" Expr       "}" ;

PatWild. Pattern ::= "_" ;
PatName. Pattern ::= Ident ;
PatUnit. Pattern ::= "()" ;
PatPair. Pattern ::= "(" Pattern "," Pattern ")" ;

EquEqual.       Equation ::=        Expr "=" Expr ;
EquInit.        Equation ::= "init" Expr "=" Expr ;
EquLocal.       Equation ::= "local" Ident;
EquSigRelApp.   Equation ::= HsExpr "<>" Expr ;

ExprOr.      Expr1 ::= Expr1 "||" Expr2 ;
ExprAnd.     Expr2 ::= Expr2 "&&" Expr3 ;
ExprLt.      Expr3 ::= Expr4 "<"  Expr4 ;
ExprLte.     Expr3 ::= Expr4 "<=" Expr4 ;
ExprGt.      Expr3 ::= Expr4 ">"  Expr4 ;
ExprGte.     Expr3 ::= Expr4 ">=" Expr4 ;
ExprAdd.     Expr4 ::= Expr4 "+"  Expr5 ;
ExprSub.     Expr4 ::= Expr4 "-"  Expr5 ;
ExprDiv.     Expr5 ::= Expr5 "/"  Expr6 ;
ExprMul.     Expr5 ::= Expr5 "*"  Expr6 ;
ExprPow.     Expr6 ::= Expr6 "^"  Expr7 ;
ExprNeg.     Expr6 ::= "-" Expr7 ;
ExprApp.     Expr7 ::= Expr7 Expr8 ;
ExprVar.     Expr8 ::= Ident ;
ExprAnti.    Expr8 ::= HsExpr ;
ExprInteger. Expr8 ::= Integer ;
ExprDouble.  Expr8 ::= Double ;
ExprUnit.    Expr8 ::= "()" ;
ExprPair.    Expr8 ::= "(" Expr "," Expr ")" ; 
_.           Expr  ::= Expr1 ;
_.           Expr1 ::= Expr2 ;
_.           Expr2 ::= Expr3 ;
_.           Expr3 ::= Expr4 ;
_.           Expr4 ::= Expr5 ;
_.           Expr5 ::= Expr6 ;
_.           Expr6 ::= Expr7 ;
_.           Expr7 ::= Expr8 ;
_.           Expr8 ::= "(" Expr ")" ;

separator Equation ";" ;

comment "--" ;
comment "{-" "-}" ;

token HsExpr ('$' (char - '$')* '$') ;

layout "->" ;
