name: Hydra
version: 0.4
cabal-version: >= 1.2
license: BSD3
license-file: LICENSE
copyright: (c) 2007-2009 George Giorgidze and Henrik Nilsson
author: George Giorgidze and Henrik Nilsson
maintainer: George Giorgidze (giorgidze@gmail.com)
homepage: http://www.cs.nott.ac.uk/~ggg/
category: Language, Math, Physics
stability: experimental
synopsis: Functional Hybrid Modelling (FHM) language.
description: An implementation of Hydra, a Functional Hybrid Modelling (FHM) language, as a domain specific language embedded in Haskell.
build-type: Custom

extra-source-files:
  README
  examples/BouncingBall.hs
  examples/BreakingPendulum.hs
  examples/Functions.hs
  examples/Mechanics.hs
  examples/Electronics.hs
  examples/SineOsc.hs
  examples/VanDerPol.hs
data-files:
  cbits/hydra_llvm.c
  cbits/hydra_llvm.s
  cbits/hydra_llvm.bc

library
  hs-source-dirs: src
  ghc-options: -Wall -O3 -fno-spec-constr-count
  cc-options:  -Wall -O3
  build-Depends: base >= 4, containers, array, mtl, template-haskell, syntax-trees, llvm
  exposed-modules:
    Hydra
  other-modules:
    Hydra.BNFC.ErrM
    Hydra.BNFC.LexHydra
    Hydra.BNFC.LayoutHydra
    Hydra.BNFC.AbsHydra
    Hydra.BNFC.ParHydra

    Hydra.Data

    Hydra.Stages.Parse
    Hydra.Stages.Desugar
    Hydra.Stages.Quote
    Hydra.Stages.BuildNewToOld
    Hydra.Stages.HandleEvents
    Hydra.Stages.BuildEvents
    Hydra.Stages.Flatten
    Hydra.Stages.Validate
    Hydra.Stages.ToLLVM
    Hydra.Stages.JIT
    Hydra.Stages.Simulate

    Hydra.Utils.Impossible
    Hydra.Utils.LLVM

    Paths_Hydra